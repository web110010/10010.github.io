[{"content":"What is GoToSocial GoToSocial provides a lightweight, customizable, and safety-focused entryway into the Fediverse, and is comparable to (but distinct from) existing projects such as Mastodon, Pleroma, Friendica, and PixelFed. -GitHub - gotosocial\nIn simple words it is a simple micro-blogging application with connectivity to other fediverse applications.\nIt is also compatible with mastodon API.\nGoToSocial over Mastodon There are quite a few reasons to run GoToSocial instance.\nIt is simpler to run and very easy to setup.\nPersonal instances don\u0026rsquo;t need a big heavy mastodon server.\nCustomizable CSS for account pages.\nA few cons It is still under development and is not feature complete with mastodon, plemora and other fediverse microblogging programs.\nIt doesn\u0026rsquo;t have an integrated client front-end, basically you cannot post directly from the site. Personally I like this way more, since I find 3rd party clients much better.\nI use Tuba for desktop and Tusky for my phone.\n3rd party apps still have bugs, with GoToSocial and sometimes bug out.\nTusky doesn\u0026rsquo;t show my profile picture.\nFedilab just keeps on crashing for me.\nDocker Docker is a set of platform as a service (PaaS) products that use OS-level virtualization to deliver software in packages called containers.[5] The service has both free and premium tiers. The software that hosts the containers is called Docker Engine.[6] It was first started in 2013 and is developed by Docker, Inc.[7] ~ Docker (software) - Wikipedia\nIt containerizes apps and makes them easier to deploy and maintain. It is the most beautiful thing ever. Once you use it, you want everything to be a docker app. So simple so elegant.\nGet Started here: Overview | Docker Documentation\nA bit about Cloudflare Tunnels A good way to describe it for my purpose would be a cornered man\u0026rsquo;s port-forwarding. They do have their advantages in terms of security and ease of use and security compared to normal port forwarding.\nA cloudflare tunnel, routes a service, without needing port-forwarding or a publicly routable IP address. You can use it with CGNAT ip addresses!.\nThere are other more complex and desirable features that cloudflare provides with their cloudflare tunnels, you should check it out. Over the years cloudflare is one of the companies, I\u0026rsquo;ve truly had a good experience with.\nThere are other providers and self hosting options for this purpose available, I just use cloudflare because they are my domain registrar. The process for other providers should be similar. Their UI is also a joy to use albeit a bit slow.\nI use it at home because my ISP blocks port-forwarding and for my Oracle cloud instance. Oracle provides a free tier for hosting cloud instances, but the ways in which they have scarred me\u0026hellip;. by using their god awful UI, laggy ssh sessions which kill themselves mid command, I could simply use an A name record to point to the oracle provided ip-address, but that is giving Oracle too much power.\nMy two cents about using Oracle:\nDon\u0026rsquo;t.\nIf there is no other choice, use as less of Oracle as possible.\nI applied to their pay as you go plan so that they don\u0026rsquo;t just delete my free instance, for \u0026ldquo;verification\u0026rdquo; they deducted 100 USD from my account, that scared the ever living shit out of me, until I got the message 1 minute later from my bank, that it was reversed. At least give a warning saying you will be checking for 100 USD, by deducting and refunding it.\nI have since terminated my Oracle Cloud Account.\nChecklist before starting A device with docker installed. (If the device is a windows machine, change the bash command to however they suit you, I have no idea how it works.)\nInternet connection.\nDomain name to point to. If using cloudflare ensure the domain is available at cloudflare. For other services, do whatever they say for you having the needed rights for pointing a domain name.\nInstructions Step 1: Installing GoToSocial On your machine create directory gotosocial and sub directory data and file docker-compose.yaml:\nAlternatively: follow the official docs and edit docker-compose.yml accordingly in next step.\n1 2 3 mkdir -p ~/gotosocial/data cd gotosocial touch docker-compose.yaml Paste the following in your docker-compose.yaml:\nEdit the following parameters:\nGTS_HOST\nGTS_ACCOUNT_DOMAIN, remove if you do not want account delegation. Having is makes your handle as @handle@example.com instead of @handle@gts.example.com.\npath/to/data should be the complete path, do not use ~ like ~/gotosocial/data , it errors out and the container keeps restarting. Read more about it here.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 version: \u0026#34;3.3\u0026#34; services: gotosocial: image: superseriousbusiness/gotosocial:latest container_name: gotosocial user: 1000:1000 hostname: gts.docker # If you change this remember the hostname networks: - gotosocial environment: GTS_HOST: gts.example.com # Change Me GTS_ACCOUNT_DOMAIN: example.com # Change Me GTS_DB_TYPE: sqlite GTS_DB_ADDRESS: /gotosocial/storage/sqlite.db GTS_LETSENCRYPT_ENABLED: \u0026#34;false\u0026#34; GTS_LETSENCRYPT_EMAIL_ADDRESS: \u0026#34;\u0026#34; volumes: - /path/to/data:/gotosocial/storage #Change path restart: \u0026#34;always\u0026#34; networks: gotosocial: ipam: driver: bridge Now simply docker-compose up -d or docker compose up -d.\nCheck if gotosocial is working correctly by running docker logs -f gotosocial. If it is running correctly, you should get similar message:\n1 2 3 4 5 6 7 8 time=2022-04-19T09:48:35Z level=info msg=connected to SQLITE database time=2022-04-19T09:48:35Z level=info msg=MIGRATED DATABASE TO group #1 (20211113114307, 20220214175650, 20220305130328, 20220315160814) func=doMigration time=2022-04-19T09:48:36Z level=info msg=instance account example.org CREATED with id 01EXX0TJ9PPPXF2C4N2MMMVK50 time=2022-04-19T09:48:36Z level=info msg=created instance instance example.org with id 01PQT31C7BZJ1Q2Z4BMEV90ZCV time=2022-04-19T09:48:36Z level=info msg=media manager cron logger: start[] time=2022-04-19T09:48:36Z level=info msg=media manager cron logger: schedule[now 2022-04-19 09:48:36.096127852 +0000 UTC entry 1 next 2022-04-20 00:00:00 +0000 UTC] time=2022-04-19T09:48:36Z level=info msg=started media manager remote cache cleanup job: will run next at 2022-04-20 00:00:00 +0000 UTC time=2022-04-19T09:48:36Z level=info msg=listening on 0.0.0.0:8080 Step 2: Setting up Cloudflare Zero Trust Login to your cloudflare account and select Zero Trust in the sidebar.\nSignup for a free account.\nStep 3: Create a tunnel Login to your Zero Trust account.\nOn the sidebar select Access then in the sub-menu Tunnels.\nSelect Create a tunnel, then name your tunnel and Save Tunnel.\nDo not close the webpage yet.\nStep 4: Installing cloudflared In a new folder create a new docker-compose.yaml.\n1 2 3 4 cd ~ # Or wherever you want to create the folder mkdir cloudflared cd cloudflared touch docker-compose.yaml In the docker-compose.yaml file add the following, replacing \u0026lt;token\u0026gt; with the token from the cloudflare tunnels webpage.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 version: \u0026#34;3.9\u0026#34; services: tunnel: container_name: cloudflared networks: - gotosocial_gotosocial image: cloudflare/cloudflared restart: unless-stopped command: tunnel run environment: - TUNNEL_TOKEN=\u0026lt;token\u0026gt; networks: gotosocial_gotosocial: external: true Save the file and docker-compose up -dordocker compose up -d.\nBack on your cloudflare tunnels page, scroll down to check if connector is connected. If it shows a connector hit save.\nIf you want to add other services to this cloudflare tunnel simply add their networks to the above docker file like how the gotosocial_gotosocial network is added and run docker compose up -d.\nYou can also do this the other way round, creating a cloudflared specific network and then adding it to your apps as you create them, but i don\u0026rsquo;t recommend it because then all your services are connected to that network and can access each other. This way only cloudflared is connected to your services.\nIf you want a good GUI for docker portainer is an incredible tool.\nStep 5: Pointing your domain name Choose whatever domain you want.\nIn Service add:\nType: HTTP\nURL: gts.docker:8080 (replace gts.docker with whatever hostname you put in Step 1 and 8080is the port where GoToSocial is listening.)\nSelect Save hostname.\nremove/change sub-domain as you see fit.\nVoila!! If you did everything correctly your GoToSocial instance should be up and running. Access it at gts.whatever-your-domain-is. Now go wild.\nBonus Round: Creating users To create a user:\n1 2 3 4 5 6 docker exec -it CONTAINER_NAME_OR_ID \\ /gotosocial/gotosocial \\ admin account create \\ --username some_username \\ --email someone@example.org \\ --password \u0026#39;some_very_good_password\u0026#39; And then to promote the created user to admin:\n1 2 3 4 docker exec -it CONTAINER_NAME_OR_ID \\ /gotosocial/gotosocial \\ admin account promote \\ --username some_username Further Reading I recommend reading the GoToSocial Documentation as it was quite helpful making this. Overall it is well-written, missing a few things here and there. You can also find further configuration options there.\n","permalink":"https://www.110010.win/posts/gotosocial-with-cloudflare-tunnels-and-docker/","summary":"What is GoToSocial GoToSocial provides a lightweight, customizable, and safety-focused entryway into the Fediverse, and is comparable to (but distinct from) existing projects such as Mastodon, Pleroma, Friendica, and PixelFed. -GitHub - gotosocial\nIn simple words it is a simple micro-blogging application with connectivity to other fediverse applications.\nIt is also compatible with mastodon API.\nGoToSocial over Mastodon There are quite a few reasons to run GoToSocial instance.\nIt is simpler to run and very easy to setup.","title":"Gotosocial With Cloudflare Tunnels and Docker"},{"content":"I have been thinking of learning golang for sometime now and decided that well an exercise such as fizzbuzz would be a great way to start familiarizing myself with the language.\nWhat is FizzBuzz? Fizz buzz is a group word game for children to teach them about division. Players take turns to count incrementally, replacing any number divisible by three with the word fizz, and any number divisible by five with the word buzz. — Wikipedia\nFor Example, in a range 1-15, it will go like:\n1 2 Fizz 4 Buzz Fizz 7 8 Fizz Buzz 11 Fizz 13 14 FizzBuzz Conventionally the range being 1-100.\nThe Problem Write a program that prints the numbers from 1 to 100. But for multiples of three print “Fizz” instead of the number and for the multiples of five print “Buzz”. For numbers which are multiples of both three and five print “FizzBuzz”.\nMy Solution It is easy to build a simple fizzbuzz solution, doing a loop to 100 and hard coding divisibility checks like if i%3 == 0, but I want to generalize my code as much as possible. That is, make changing the inputs very easy without affecting the logic of the program.\nHere is my solution:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 package main import \u0026#34;fmt\u0026#34; // Struct to map Number to String type NumString struct{ num int txt string } func main(){ // Range var rf int = 1 // Range First var rl int = 100 // Range Last // FizzBuzz Relations numfb := []NumString{ {3, \u0026#34;Fizz\u0026#34;}, {5, \u0026#34;Buzz\u0026#34;}, } fizz_buzz(numfb, rf, rl) } func fizz_buzz(numfb []NumString, rf int, rl int){ var tempstr string = \u0026#34;\u0026#34; for i:= rf; i \u0026lt;= rl; i++{ for _, element := range numfb{ // Go over all Relations and check divisibility if i%element.num == 0 { tempstr += element.txt } } if tempstr == \u0026#34;\u0026#34; { fmt.Println(i) // Print number if no divisibility } else { // Otherwise Print mapped txt fmt.Println(tempstr) tempstr = \u0026#34;\u0026#34; } } } Observations Using a struct instead of a map. I should have probably used a map instead, but really wanted to do this with a struct. I will say, it turned out better than I could have hoped for. The more I look at it, the more I think It should have used a map, but I will resist, this is my masterpiece.\nOn line 27, the for loop uses _ because and index value is not needed. Interesting design choice.\nelse start the same line as I close the bracket for the if statement. I cannot place the else statement on the next line, that is a syntax error. If I think about it, it does make sense that the related else statement should be nested, but it does feel weird doing that, since i have a habit of placing the else statement on the next line. The 2 minutes I did not understand why this was happening, I felt very dumb.\nThere is no output. Wonder what happened to it, you are now gonna have to run it on your own to find out, if the output is correct or not.\nClosing words It was pretty fun writing this thing in golang. The documentation was full of great examples which made understanding the basics really easy. Probably one of the easiest languages to learn, if you know any other programming language.\nI would say it is an above average implementation of fizzbuzz. It may not be the fastest, or the most generalized one, but this much is sure, if you look at it, it surely is an okay fizzbuzz implementation.\nI do think there is still improvement that can be to this. I may comeback to this on a later date once I am more comfortable in the language.\n","permalink":"https://www.110010.win/posts/a-fizzbuzz-implentation/","summary":"I have been thinking of learning golang for sometime now and decided that well an exercise such as fizzbuzz would be a great way to start familiarizing myself with the language.\nWhat is FizzBuzz? Fizz buzz is a group word game for children to teach them about division. Players take turns to count incrementally, replacing any number divisible by three with the word fizz, and any number divisible by five with the word buzz.","title":"A FizzBuzz Implentation"},{"content":"I have been using tiling windows in some form or the other for a good part of 5 years now. Be it via GNOME extensions, Kwin tiling, Pop!OS tiling mode, i3, sway, bspwm, awesome. Finally, I have set my self comfortably on sway.\nWhat is a tiling window manager? A tiling window manager in simple terms is a organisation system, which organizes windows in a non overlapping way.\nBasically when a new window is opened, it will re-arrange existing open windows depending on some pre-existing parameters.\nWhat makes a tiling window manager so special In one word if I have to explain it, then I would say personalization. it places all the regular apps some one would use in a predetermined manner as set by the user. I just press the keyboard shortcut/ open the program and it will place itself exactly where I want every single time without fault.\nVirtual Desktops Virtual Desktops (or Workspaces) is what truly makes them special, they make sure that I can have multiple programs open without having them too small, all full size if I want. I don\u0026rsquo;t need to alt-tab for switching programs, I can just press $mod4+\u0026lt;Workspace\u0026gt; ($mod4 being the windows/command key) according to my configuration, just shift to the program I want. No need to alt+tab till I find the program I\u0026rsquo;m looking for.\nFloating windows are allowed There are some programs/windows you would always want to float/stack. Almost all modern tiling window managers allow this functionality. You can pre configure certain programs/ windows to appear in a floating format, or have any or all programs turn floating with a simple shortcut.\nWhy I like it so much If I have to say it in a few words, then I would say that it is because that the default behavior of having windows tiled rather than stacked is much more desirable to me.\nI don\u0026rsquo;t have to go around stacking windows left and right every time I have to have multiple windows open on the same screen. I feel so much more at ease this way, I don\u0026rsquo;t have to worry about window management and can just focus on my work.\nAnother important factor is that it makes you feel proud, because it is something you have built, line-by-line. A certain windows open a certain somewhere in the way defined it to open, that just brings a little smile to the face.\nTry it If you haven\u0026rsquo;t tried a tiling window manager before, you should give it a go. You will discover a whole new world of window management. It is truly an amazing experience one must experience, even if it doesn\u0026rsquo;t turn out the more comfortable option for them. If you don\u0026rsquo;t like it you can always go back to whatever you were using before.\nFor the best possible experience, with minimum configuration needed, I highly recommend EndeavourOS-i3wm. Endeavour OS is a arch based linux distro. The way they have riced (act of customizing the operating system), it is just so beautiful. It truly is one of the best ways to experience i3wm (The best window manager, fight me). I have copied a lot of things from their i3 skin, even as I moved distros and window managers.\nClick here for download page\nNote: Try in VM before installing any OS/WM directly on your computer.\nWindows/MacOS If you are on Windows or MacOS and don\u0026rsquo;t want to change your OS you have nothing to worry, their are options for you too. Here are some I found, do look at reviews before trying them out.\nNote: Try in VM before installing any OS/WM directly on your computer.\nWindows:\nkomorebi: A tiling window manager for Windows\nGlazeWM: A tiling window manager for Windows inspired by i3 and Polybar.\nAquaSnap Window Manager: dock, snap, tile, organize\nMacOS:\nyabai: A tiling window manager for macOS based on binary space partitioning\nAmethyst: Automatic tiling window manager for macOS à la xmonad.\nSo, what are you waiting for? Go wild, try out a tiling window manager, discover a whole new way of doing something and the most important thing of all, enjoy your time doing it.\n","permalink":"https://www.110010.win/posts/joys-of-tiling-window-manager/","summary":"I have been using tiling windows in some form or the other for a good part of 5 years now. Be it via GNOME extensions, Kwin tiling, Pop!OS tiling mode, i3, sway, bspwm, awesome. Finally, I have set my self comfortably on sway.\nWhat is a tiling window manager? A tiling window manager in simple terms is a organisation system, which organizes windows in a non overlapping way.\nBasically when a new window is opened, it will re-arrange existing open windows depending on some pre-existing parameters.","title":"Joys of a Tiling Window Manager"},{"content":"This is my first post now and I do think this is going to be a journey.\nOnly time will tell where this voyage will take me. I hope as I do look at this post years later I will remember this post fondly. I hope to records some great records and maybe put out my thoughts and ideas about various things.\nI wish this blog does turn itself into something and take a form of it own.\nSo lets start this journey!\nPatrick Tomasso on Unsplash ","permalink":"https://www.110010.win/posts/firstpost/","summary":"This is my first post now and I do think this is going to be a journey.\nOnly time will tell where this voyage will take me. I hope as I do look at this post years later I will remember this post fondly. I hope to records some great records and maybe put out my thoughts and ideas about various things.\nI wish this blog does turn itself into something and take a form of it own.","title":"First Post"},{"content":" Hey there! I'm a young guy fueled by an insatiable passion for all things tech and open source. From the moment I got my hands on a computer, I knew I had found my calling. I wanted a place to share my thoughts for the longest time. Me not trusting big social media sites is what led me to decide on a blog. Using Hugo for the blog has also been a great learning experience.\nHere I will put out my thoughts on whatever topics find interesting and things affecting my life.\nDo share your thoughts with me!\n","permalink":"https://www.110010.win/about/","summary":"Hey there! I'm a young guy fueled by an insatiable passion for all things tech and open source. From the moment I got my hands on a computer, I knew I had found my calling. I wanted a place to share my thoughts for the longest time. Me not trusting big social media sites is what led me to decide on a blog. Using Hugo for the blog has also been a great learning experience.","title":"About"},{"content":" Loading... ","permalink":"https://www.110010.win/contact/","summary":" Loading... ","title":"Contact"}]